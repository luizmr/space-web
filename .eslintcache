[{"/home/marx/Desktop/Edesoft/space-web/src/index.tsx":"1","/home/marx/Desktop/Edesoft/space-web/src/App.tsx":"2","/home/marx/Desktop/Edesoft/space-web/src/routes.tsx":"3","/home/marx/Desktop/Edesoft/space-web/src/app/pages/form-novo-app/form-novo-app.tsx":"4","/home/marx/Desktop/Edesoft/space-web/src/app/pages/cadastro-apps/cadastro-apps.tsx":"5","/home/marx/Desktop/Edesoft/space-web/src/app/pages/billing/billing.tsx":"6","/home/marx/Desktop/Edesoft/space-web/src/app/pages/cadastro-apps/mock.tsx":"7","/home/marx/Desktop/Edesoft/space-web/src/app/pages/form-novo-app/dados-basicos-form/dados-basicos-form.tsx":"8","/home/marx/Desktop/Edesoft/space-web/src/app/pages/form-novo-app/cobranca/cobranca-form.tsx":"9","/home/marx/Desktop/Edesoft/space-web/src/app/pages/form-novo-app/proximos-passos/proximos-passos-form.tsx":"10","/home/marx/Desktop/Edesoft/space-web/src/app/components/billing/billing-app-card.tsx":"11","/home/marx/Desktop/Edesoft/space-web/src/app/pages/Login/Login.tsx":"12","/home/marx/Desktop/Edesoft/space-web/src/app/components/Navbar/Navbar.tsx":"13"},{"size":277,"mtime":1610372166310,"results":"14","hashOfConfig":"15"},{"size":169,"mtime":1610660065229,"results":"16","hashOfConfig":"15"},{"size":1257,"mtime":1610660118933,"results":"17","hashOfConfig":"15"},{"size":3393,"mtime":1610660512907,"results":"18","hashOfConfig":"15"},{"size":6935,"mtime":1610659909045,"results":"19","hashOfConfig":"15"},{"size":1543,"mtime":1610660241606,"results":"20","hashOfConfig":"15"},{"size":3341,"mtime":1610659909045,"results":"21","hashOfConfig":"15"},{"size":4097,"mtime":1610659909045,"results":"22","hashOfConfig":"15"},{"size":2033,"mtime":1610659909045,"results":"23","hashOfConfig":"15"},{"size":1649,"mtime":1610659909045,"results":"24","hashOfConfig":"15"},{"size":1947,"mtime":1610659909045,"results":"25","hashOfConfig":"15"},{"size":3438,"mtime":1610659949861,"results":"26","hashOfConfig":"15"},{"size":2178,"mtime":1610659949861,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15e7fku",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/home/marx/Desktop/Edesoft/space-web/src/index.tsx",[],"/home/marx/Desktop/Edesoft/space-web/src/App.tsx",[],"/home/marx/Desktop/Edesoft/space-web/src/routes.tsx",["58"],"/home/marx/Desktop/Edesoft/space-web/src/app/pages/form-novo-app/form-novo-app.tsx",["59"],"/home/marx/Desktop/Edesoft/space-web/src/app/pages/cadastro-apps/cadastro-apps.tsx",["60","61","62","63"],"import React, { useState, useEffect } from 'react';\nimport {\n    Navbar,\n    Nav,\n    Button,\n    FormControl,\n    Form,\n    OverlayTrigger,\n    Tooltip,\n} from 'react-bootstrap';\nimport { FaPlus } from 'react-icons/fa';\nimport { FiCornerDownLeft, FiSearch, FiPlus } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport { mockApps, mockCobranca } from './mock';\nimport { AppOutput, CobrancaOutput } from '../../models/cadastro-apps';\nimport BillingAppCard from '../../components/billing/billing-app-card';\n\nexport default function CadastroApps() {\n    const quantityOfResults = 2;\n\n    const [apps, setApps] = useState<Array<AppOutput>>([]);\n    const [filteredApps, setFilteredApps] = useState<Array<AppOutput>>([]);\n    const [filteredArray, setFilteredArray] = useState<Array<AppOutput>>([]);\n    const [filtredValue, setFilteredValue] = useState<number>(0);\n    const [searching, setSearching] = useState<boolean>(false);\n    const [textSearch, setTextSearch] = useState<string>('');\n    const [resultSlicer, setResultSlicer] = useState<number>(quantityOfResults);\n    const [showResultSlicer, setShowResultSlicer] = useState<boolean>(true);\n\n    useEffect(() => {\n        setApps(mockApps);\n        setFilteredApps(mockApps.slice(0, resultSlicer));\n    }, []);\n\n    const searchApps = (e: string) => {\n        setShowResultSlicer(true);\n        setResultSlicer(quantityOfResults);\n\n        if (e === '') {\n            setFilteredApps(mockApps.slice(0, resultSlicer));\n            setSearching(false);\n            setTextSearch('');\n            setShowResultSlicer(true);\n            setResultSlicer(quantityOfResults);\n        } else {\n            let arrayFilter: Array<AppOutput> = [];\n            apps?.map((el) => {\n                if (el.Nome && el.Descricao) {\n                    if (\n                        el?.Nome.toLowerCase().indexOf(e.toLowerCase()) > -1 ||\n                        el?.Descricao.toLowerCase().indexOf(e.toLowerCase()) >\n                            -1\n                    ) {\n                        arrayFilter.push(el);\n                    }\n                }\n            });\n            setFilteredApps(arrayFilter.slice(0, resultSlicer));\n            setFilteredValue(arrayFilter.length);\n            setFilteredArray(arrayFilter);\n            setSearching(true);\n            setTextSearch(e);\n\n            if (\n                arrayFilter.length < quantityOfResults ||\n                slicedArray(filteredApps).length === arrayFilter.length\n            ) {\n                setShowResultSlicer(false);\n            }\n        }\n    };\n\n    const moreResults = (): void => {\n        if (!searching) {\n            setFilteredApps(slicedArray(apps));\n            setResultSlicer(resultSlicer + quantityOfResults);\n            checkResultSlicer(apps);\n        } else {\n            setFilteredApps(slicedArray(filteredArray));\n            setResultSlicer(resultSlicer + quantityOfResults);\n            checkResultSlicer(filteredArray);\n        }\n    };\n\n    const checkResultSlicer = (obj: Array<AppOutput>): void => {\n        if (slicedArray(obj).length === obj.length) {\n            setShowResultSlicer(false);\n        }\n    };\n\n    const slicedArray = (obj: Array<AppOutput>) => {\n        return obj.slice(0, resultSlicer + quantityOfResults);\n    };\n\n    return (\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#features\">Features</Nav.Link>\n                    <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n                </Nav>\n                <Form inline>\n                    <FormControl\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        className=\"mr-sm-2\"\n                    />\n                    <Button variant=\"outline-info\">Search</Button>\n                </Form>\n            </Navbar>\n            <div className=\"cadastro-apps\">\n                <div className=\"cadastro-apps__header\">\n                    <h2>Cadastro de Aplicativos</h2>\n                    <Link to=\"/billing\">\n                        <Button\n                            variant=\"dark\"\n                            className=\"cadastro-apps__header-button\"\n                        >\n                            <FiCornerDownLeft />\n                        </Button>\n                    </Link>\n                </div>\n                <div className=\"cadastro-apps__filter\">\n                    <div className=\"cadastro-apps__filter-1\">\n                        <Form inline className=\"cadastro-apps__filter-search\">\n                            <FiSearch />\n                            <input\n                                type=\"text\"\n                                placeholder=\"Procurar ...\"\n                                className=\"search-box\"\n                                onChange={(e) => {\n                                    searchApps(e.currentTarget.value);\n                                }}\n                            />\n                        </Form>\n                    </div>\n\n                    <OverlayTrigger\n                        key=\"bottom\"\n                        placement=\"bottom\"\n                        overlay={\n                            <Tooltip id={`tooltip-bottom`}>\n                                Nova Aplicação\n                            </Tooltip>\n                        }\n                    >\n                        <Link to=\"/billing/cadastro-apps/novo-app\">\n                            <div className=\"cadastro-apps__filter-2\">\n                                <FiPlus />\n                            </div>\n                        </Link>\n                    </OverlayTrigger>\n                </div>\n                {searching && (\n                    <p>\n                        encontramos {`${filtredValue}`} resultados para a sua\n                        procura \"{`${textSearch}`}\"\n                    </p>\n                )}\n                <div className=\"billing-cards\">\n                    {filteredApps?.map((app) => (\n                        <BillingAppCard\n                            Nome={app.Nome}\n                            Logo={app.Logo}\n                            Descricao={app.Descricao}\n                            Id={app.Id}\n                            Link={app.Link}\n                            key={app.Id}\n                        />\n                    ))}\n                </div>\n                {showResultSlicer && (\n                    <div className=\"more-result-button\">\n                        <Button variant=\"dark\" onClick={moreResults}>\n                            <FaPlus />\n                        </Button>\n                    </div>\n                )}\n            </div>\n            <div className=\"footer\">Footer</div>\n        </>\n    );\n}\n",["64","65"],"/home/marx/Desktop/Edesoft/space-web/src/app/pages/billing/billing.tsx",[],"/home/marx/Desktop/Edesoft/space-web/src/app/pages/cadastro-apps/mock.tsx",[],"/home/marx/Desktop/Edesoft/space-web/src/app/pages/form-novo-app/dados-basicos-form/dados-basicos-form.tsx",["66","67"],"import React, { useState } from 'react';\nimport { Dispatch, SetStateAction } from 'react';\nimport { Form, Col, Button } from 'react-bootstrap';\nimport { AppOutput } from '../../../models/cadastro-apps';\nimport { FaArrowCircleUp } from 'react-icons/fa';\n\ntype Props = {\n    app?: AppOutput;\n    setApp: React.Dispatch<React.SetStateAction<AppOutput>>;\n};\n\nconst DadosBasicosForm = ({ app, setApp }: Props) => {\n    console.log('app passed', app);\n\n    const [logoDefault, setLogoDefault] = useState<string>('Logo');\n\n    return (\n        <>\n            <Form>\n                <Form.Group>\n                    <div\n                        className=\"file-upload-wrapper\"\n                        data-text={logoDefault}\n                    >\n                        <input\n                            id=\"file-input\"\n                            name=\"file-upload-field\"\n                            type=\"file\"\n                            accept=\"image/png, image/jpeg\"\n                            className=\"file-upload-field\"\n                            value=\"\"\n                            onChange={(e) => {\n                                setLogoDefault(\n                                    e.currentTarget.value.replace(\n                                        /.*(\\/|\\\\)/,\n                                        ''\n                                    )\n                                );\n                                setApp({\n                                    ...app,\n                                    Logo: `${e.currentTarget.value}`,\n                                });\n                                console.log('logo', app);\n                            }}\n                        />\n                        <label htmlFor=\"file-input\">\n                            <FaArrowCircleUp />\n                        </label>\n                    </div>\n                </Form.Group>\n                {/* <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Logo\"\n                            onChange={(e) => {\n                                // appObject.Nome = e.currentTarget.value;\n                                setApp({ ...app, Nome: e.currentTarget.value });\n                                console.log('app new', app);\n                            }}\n                        />\n                    </Form.Group>\n                </Form.Row> */}\n\n                <Form.Group controlId=\"formGridAddress1\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control placeholder=\"1234 Main St\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridAddress2\">\n                    <Form.Label>Address 2</Form.Label>\n                    <Form.Control placeholder=\"Apartment, studio, or floor\" />\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                        <Form.Label>City</Form.Label>\n                        <Form.Control />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>State</Form.Label>\n                        <Form.Control as=\"select\" defaultValue=\"Choose...\">\n                            <option>Choose...</option>\n                            <option>...</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                        <Form.Label>Zip</Form.Label>\n                        <Form.Control />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Group id=\"formGridCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </>\n    );\n};\n\nexport default DadosBasicosForm;\n","/home/marx/Desktop/Edesoft/space-web/src/app/pages/form-novo-app/cobranca/cobranca-form.tsx",[],"/home/marx/Desktop/Edesoft/space-web/src/app/pages/form-novo-app/proximos-passos/proximos-passos-form.tsx",[],"/home/marx/Desktop/Edesoft/space-web/src/app/components/billing/billing-app-card.tsx",["68","69","70"],"import React from 'react';\nimport { AppOutput } from '../../models/cadastro-apps';\nimport { Link } from 'react-router-dom';\nimport {\n    Card,\n    Button,\n    Dropdown,\n    DropdownButton,\n    NavLink,\n} from 'react-bootstrap';\nimport { FaExternalLinkAlt, FaEdit, FaTrashAlt } from 'react-icons/fa';\n\nconst BillingAppCard: React.FC<AppOutput> = ({\n    Nome,\n    Logo,\n    Descricao,\n    Link,\n}) => {\n    return (\n        <>\n            <Card className=\"billing-app-card\">\n                <Card.Img variant=\"top\" src={Logo} />\n                <Card.Body className=\"billing-app-card__body\">\n                    <div>\n                        <Card.Title>{Nome}</Card.Title>\n                        <Card.Text>{Descricao}</Card.Text>\n                    </div>\n                    <div className=\"billing-app-card__buttons\">\n                        <DropdownButton\n                            key=\"right\"\n                            id={`dropdown-button-drop-right`}\n                            drop=\"right\"\n                            variant=\"dark\"\n                            title={`Opções`}\n                        >\n                            <Dropdown.Item\n                                onClick={() => window.open(`${Link}`, '_blank')}\n                            >\n                                <FaExternalLinkAlt /> <p>Abrir</p>\n                            </Dropdown.Item>\n\n                            <Dropdown.Item eventKey=\"2\">\n                                <FaEdit />\n                                <p>Editar</p>\n                            </Dropdown.Item>\n                            <Dropdown.Item eventKey=\"3\">\n                                <FaTrashAlt />\n                                <p>Deletar</p>\n                            </Dropdown.Item>\n                        </DropdownButton>\n                    </div>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport default BillingAppCard;\n","/home/marx/Desktop/Edesoft/space-web/src/app/pages/Login/Login.tsx",[],"/home/marx/Desktop/Edesoft/space-web/src/app/components/Navbar/Navbar.tsx",[],{"ruleId":"71","severity":1,"message":"72","line":2,"column":50,"nodeType":"73","messageId":"74","endLine":2,"endColumn":54},{"ruleId":"71","severity":1,"message":"75","line":12,"column":11,"nodeType":"73","messageId":"74","endLine":12,"endColumn":15},{"ruleId":"71","severity":1,"message":"76","line":14,"column":20,"nodeType":"73","messageId":"74","endLine":14,"endColumn":32},{"ruleId":"71","severity":1,"message":"77","line":15,"column":21,"nodeType":"73","messageId":"74","endLine":15,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":33,"column":8,"nodeType":"80","endLine":33,"endColumn":10,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":47,"column":28,"nodeType":"84","messageId":"85","endLine":47,"endColumn":30},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"71","severity":1,"message":"90","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":18},{"ruleId":"71","severity":1,"message":"91","line":2,"column":20,"nodeType":"73","messageId":"74","endLine":2,"endColumn":34},{"ruleId":"71","severity":1,"message":"72","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"92","line":6,"column":5,"nodeType":"73","messageId":"74","endLine":6,"endColumn":11},{"ruleId":"71","severity":1,"message":"93","line":9,"column":5,"nodeType":"73","messageId":"74","endLine":9,"endColumn":12},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'IApp' is defined but never used.","'mockCobranca' is defined but never used.","'CobrancaOutput' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resultSlicer'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredApps' needs the current value of 'resultSlicer'.","ArrayExpression",["94"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.","'Button' is defined but never used.","'NavLink' is defined but never used.",{"desc":"97","fix":"98"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [resultSlicer]",{"range":"99","text":"100"},[1279,1281],"[resultSlicer]"]